// üîê ‡πÉ‡∏™‡πà TOKEN ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó Telegram ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å @BotFather
const TELEGRAM_TOKEN = '8138304707:AAGUCHJm7RHl0u4kIslGDzPw7zx4cj5JjEw';
const TELEGRAM_API_URL = `https://api.telegram.org/bot${TELEGRAM_TOKEN}`;

// üîó ‡πÉ‡∏™‡πà URL ‡∏Ç‡∏≠‡∏á Web App ‡∏ó‡∏µ‡πà deploy ‡πÅ‡∏•‡πâ‡∏ß
const WEBHOOK_URL = 'https://script.google.com/macros/s/AKfycbzBJ10k_Ggk7qCGg7nrOM6FHcbbNJ_OSeWHYiR14J6frGoB2W0xMc76TFXEOtJ1NnnV/exec';

// üì® ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á Telegram
function sendMessageToTelegram(message, chatId) {
  if (!message || message.trim() === '' || !chatId) {
    Logger.log("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ chatId");
    return;
  }

  const url = `${TELEGRAM_API_URL}/sendMessage`;
  const payload = {
    chat_id: chatId,
    text: message,
  };

  const options = {
    method: 'post',
    contentType: 'application/json',
    payload: JSON.stringify(payload),
  };

  try {
    const response = UrlFetchApp.fetch(url, options);
    Logger.log("üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß: " + response.getContentText());
  } catch (error) {
    Logger.log("‚ùå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " + error);
  }
}

// ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏¢‡∏±‡∏á chat ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
function sendText() {
  const chatId = getChatId();  // ‡∏î‡∏∂‡∏á chat ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å getUpdates()

  if (chatId) {
    const message = "üì® ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Telegram ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ú‡∏°";
    sendMessageToTelegram(message, chatId);
  } else {
    Logger.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö chat ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°");
  }
}

// ‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Webhook
function setWebhook() {
  const url = `${TELEGRAM_API_URL}/setWebhook?url=${encodeURIComponent(WEBHOOK_URL)}`;
  const response = UrlFetchApp.fetch(url);
  Logger.log("üì° ‡∏ï‡∏±‡πâ‡∏á webhook ‡πÅ‡∏•‡πâ‡∏ß: " + response.getContentText());
}

// ‚ùå ‡∏•‡∏ö Webhook
function deleteWebhook() {
  const url = `${TELEGRAM_API_URL}/deleteWebhook`;
  const response = UrlFetchApp.fetch(url);
  Logger.log("üóëÔ∏è ‡∏•‡∏ö webhook ‡πÅ‡∏•‡πâ‡∏ß: " + response.getContentText());
}

// üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Bot (token ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà)
function getBotInfo() {
  const url = `${TELEGRAM_API_URL}/getMe`;
  const response = UrlFetchApp.fetch(url);
  Logger.log("‚ÑπÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó: " + response.getContentText());
}

// üßæ ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤ Chat ID ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
function getChatId() {
  const url = `${TELEGRAM_API_URL}/getUpdates`;
  const response = UrlFetchApp.fetch(url);
  const data = JSON.parse(response.getContentText());

  if (data.ok && data.result.length > 0) {
    const chatId = data.result[data.result.length - 1].message.chat.id;
    Logger.log("üÜî Chat ID: " + chatId);
    return chatId;
  } else {
    Logger.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏î ‡πÜ");
    return null;
  }
}

// üì• ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Webhook ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
function doPost(e) {
  try {
    const data = JSON.parse(e.postData.contents);
    const message = data.message;

    if (!message || !message.chat || !message.chat.id || !message.text) {
      Logger.log("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠ chat id ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ");
      return;
    }

    const chatId = message.chat.id;
    const text = message.text;

    // üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
    sendMessageToTelegram(`‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤: ${text}`, chatId);
  } catch (error) {
    Logger.log("‚ùå doPost error: " + error);
  }
}
